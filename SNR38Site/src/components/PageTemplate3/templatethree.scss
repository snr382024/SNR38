$shadow-color: rgba(0, 0, 0, 0.4);
$shadow-blur: 1vw;
$shadow-spread: 0.2vw;

img, video {
  box-shadow: 0 0 $shadow-blur $shadow-spread $shadow-color;
}


.template-three-container {
  display: flex;
  height: 100vh;
  justify-content: center;
  align-items: stretch;

  .column-first, .column-third, .column-fourth {
    flex: 1; // Each of these columns will take up equal space
    display: flex;
    justify-content: center;
    align-items: center;
    // overflow: hidden;
  }

  .column-first .image-cell, .column-video {
    margin: $shadow-blur; // Adjust margin to provide space for the shadow
    max-height: 100vh; // Ensures the content does not exceed the viewport height
    display: flex;
    justify-content: center;
    align-items: center;

    img{
      max-height: 100%; // Ensures the content does not exceed the cell height
      max-width: 100%; // Ensures the content does not exceed the cell width
      width: auto; // Adjusts the width to maintain aspect ratio
      height: 90vh; // Adjusts the height to be the same for image and video
      object-fit: cover; // Covers the area without stretching
    }
  }

  .column-video {
    flex: 2; // This makes the video column twice as wide as the other columns
    display: flex;
    justify-content: center;
    align-items: center;
    // overflow: hidden;

    .video-container {
      z-index: 1;
      width: 100%; // Video container takes the full width of the column
      video {
        width: 100%; // Video fills the container
        height: 750px;
        max-height: 90vh;
        object-fit: cover;
      }
    }
  }

  .column-third {
    flex: 1; // Adjust based on your design requirements
    display: flex;
    flex-direction: column; // Stacks the image-cell and color-style on top of each other
    align-items: center; // Centers them horizontally

    .image-cell {
      z-index: 1;
      width: 100%; // Full width of the column
      // Set the height to a percentage of the viewport height or use flex-grow
      flex-grow: 1;
      display: flex;
      justify-content: center;
      align-items: center;

      img {
        height: 70vh; // Maintains the current height
        width: 100%; // Will make the image as wide as .image-cell
        object-fit: contain; // Will ensure the image fits within the given dimensions without stretching, but may introduce letterboxing
        margin-bottom: -5vh;

      }
    }

    .color-style {
      width: calc(2 * (10vh - 4px + 2 * 2px)); // Calculates the total width based on the squares' width and margins
      display: flex;
      flex-direction: column; // Align color rows vertically
      justify-content: center; // Center rows vertically with less space in the middle
      align-items: center; // Center the color rows horizontally
      flex-grow: 1; // Let the color-style take up available space
    
      .color-row {
        display: flex; // Enable flex layout to manage color divs
        justify-content: center; // Center the divs horizontally with less space in the middle
        align-items: center; // Center the color divs vertically
        width: 100%; // Full width of the column
        margin: 2px 2px; // Reduced vertical spacing between rows

    
        div {
          height: calc(
            8vh - 4px
          ); // Set height based on container height minus any margins
          width: calc(
            8vh - 4px
          ); // Set width the same as height for square shape
          margin: 2px; // Maintain small gap between squares
        }
      }
    }
  }

  .column-third {
    flex: 0 0 auto; // Allow these columns to size according to content
    margin-left: 2vw; 
    margin-right: 2vw; 

  }

  // .column-fourth {
  //   flex: 0 0 auto; // Allow these columns to size according to content
  //   margin-right: 2vw; // Negative margin to pull the columns closer
  //   // Be cautious with negative margins as they can cause overlap
  //   // If this causes overlap, reduce the size of the images or content in these columns
  // }

  .column-fourth {
    flex: 1; // Takes up 1/3 of the space if there are three columns
    display: flex;
    flex-direction: column; // Aligns children vertically
    align-items: center; // Centers children horizontally
    padding-right: 3vw;
    
    .image-cell {
      flex-grow: 1; // Allows the cell to grow and fill the space equally
      display: flex;
      justify-content: center;
      align-items: center;
      // overflow: hidden; // Ensures the content doesn't overflow
  
      .square-image {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%; // Takes up the full width of its container
        height: 45vh; // Sets height of the square image
  
        img {
          height: 36vh; // Sets the height of the square image
          width: auto; // Adjusts the width to maintain aspect ratio
          object-fit: contain; // Ensures the entire image fits within the given dimensions

        }
      }
    }
    
    .image-row {
      display: flex;
      justify-content: center; // Aligns children in the center
      align-items: center; // Centers children vertically
      width: 100%; // Full width of the column
    
      .image-cell {
        width: calc(50% - 5px); // Adjusts the width to account for a smaller margin
        margin: 0 2.5px; // Gives a 2.5px margin on each side of the image-cell
    
        .rectangle-image img {
          height: 50vh; // Matches the height of the square image
          width: auto; // Adjusts the width to maintain aspect ratio
          object-fit: contain; // Ensures the entire image fits within the given dimensions
          margin-bottom: 4vh;

        }
      }
    }
  }
}  